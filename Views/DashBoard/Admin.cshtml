@model Electricity_Consumtion.Models.User

@{
    ViewBag.Title = "Admin";
    Layout = "~/Views/Shared/_admindash.cshtml";
}

<div class="wrapper">
    <div class="sidebar">
        <div class="sidebar-wrapper">
            <div class="logo">
                <a href="javascript:void(0)" class="simple-text logo-normal">
                    Admin
                </a>
            </div>
            <ul class="nav">
                <li class="active ">
                    <a href="@Url.Action("Admin","DashBoard")">
                        <i class="tim-icons icon-single-02"></i>
                        <p>Add Customer</p>
                    </a>
                </li>
            </ul>
        </div>
    </div>
    <div class="main-panel">
        <!-- Navbar -->
        <nav class="navbar navbar-expand-lg navbar-absolute navbar-transparent">
            <div class="container-fluid">
                <div class="navbar-wrapper">
                    <div class="navbar-toggle d-inline">
                        <button type="button" class="navbar-toggler">
                            <span class="navbar-toggler-bar bar1"></span>
                            <span class="navbar-toggler-bar bar2"></span>
                            <span class="navbar-toggler-bar bar3"></span>
                        </button>
                    </div>
                    <a class="navbar-brand" href="javascript:void(0)">Add Customer</a>
                </div>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navigation" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-bar navbar-kebab"></span>
                    <span class="navbar-toggler-bar navbar-kebab"></span>
                    <span class="navbar-toggler-bar navbar-kebab"></span>
                </button>
                <div class="collapse navbar-collapse" id="navigation">
                    <ul class="navbar-nav ml-auto">
                        <li class="dropdown nav-item">
                            <img src="~/Dashboard/img/anime3.png" alt="Profile Photo" class="btn btn-secondary" onclick="logout()" style="width:60px; height:58px;" />
                        </li>
                        <li class="separator d-lg-none"></li>
                    </ul>
                </div>
            </div>
        </nav>
        <!-- End Navbar -->
        <div class="content">
            @using (Html.BeginForm())
            {
                <div class="row">
                    <div class="col-xl-12">
                        <div class="card" style="background-color:#1d253b;">
                            <div class="card-header">
                                <h5 class="title">Add Customer</h5>
                            </div>
                            <div class="card-body">
                                <form style="background-color:cornflowerblue">
                                    @Html.AntiForgeryToken()
                                    <div class="row">
                                        <div class="col-md-7 pr-md-1">
                                            <div class="form-group">
                                                <label>Connection ID</label>
                                                @Html.EditorFor(model => model.Connection_ID, new { htmlAttributes = new { @class = "form-control", @placeholder = "Connection Number", @id = "connection" } })
                                                @Html.ValidationMessageFor(model => model.Connection_ID, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-7 pr-md-1">
                                            <div class="form-group">
                                                <label>National Identity Card No (NIC)</label>
                                                @Html.EditorFor(model => model.National_Identitycard_Number, new { htmlAttributes = new { @class = "form-control", @placeholder = "National Identity Card No (NIC)", @id = "nic" } })
                                                @Html.ValidationMessageFor(model => model.National_Identitycard_Number, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6 pr-md-1">
                                            <div class="form-group">
                                                <label>First Name</label>
                                                @Html.EditorFor(model => model.First_name, new { htmlAttributes = new { @class = "form-control", @placeholder = "First Name", @id = "fname" } })
                                                @Html.ValidationMessageFor(model => model.First_name, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6 pl-md-1">
                                            <div class="form-group">
                                                <label>Last Name</label>
                                                @Html.EditorFor(model => model.Last_Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Last Name", @id = "lname" } })
                                                @Html.ValidationMessageFor(model => model.Last_Name, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-7 pr-md-1">
                                            <div class="form-group">
                                                <label>E-Mail</label>
                                                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", @placeholder = "E-mail", @id = "email" } })
                                                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-7 pr-md-1">
                                            <div class="form-group">
                                                <label>Contact Number</label>
                                                @Html.EditorFor(model => model.Contact_Number, new { htmlAttributes = new { @class = "form-control", @placeholder = "Contact Number", @id = "contact" } })
                                                @Html.ValidationMessageFor(model => model.Contact_Number, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label>Address</label>
                                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @placeholder = "Home Address", @id = "address" } })
                                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-4 pr-md-1">
                                            <div class="form-group">
                                                <label>Select Type</label>
                                                <div class="custom-control custom-radio">
                                                    @Html.RadioButtonFor(model => model.ctype, "Domestic", new { id = "Domestic" })
                                                    <label>Domestic</label>
                                                    @Html.RadioButtonFor(model => model.ctype, "Industrial", new { id = "Industrial" })
                                                    <label>Industrial</label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <div class="dropdown">
                                                    @Html.DropDownList("Regional", ViewData["regional"] as List<SelectListItem>, new { style = "width:250px", required = "required ", @class = "btn btn-secondary dropdown-toggle" })
                                                    @Html.DropDownList("Province", new SelectList(string.Empty, "Text", "Value"), "Select Provincial Office", new { style = "width:250px", @class = "btn btn-secondary dropdown-toggle" })
                                                    @Html.DropDownList("Area", new SelectList(string.Empty, "Text", "Value"), "Select Area Office", new { style = "width:250px", @class = "btn btn-secondary dropdown-toggle" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </form>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Create" class="btn btn-fill btn-secondary" id="btn-usave" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    <footer class="footer" style="background-color:#1d253b;">
        <div class="container-fluid">
            <div class="copyright">
                ©
                <script>
                    document.write(new Date().getFullYear())
                </script> Developed by Dulanjalee Oshadhi Gamage.
            </div>
        </div>
    </footer>
</div>
@*<script src="~/Dashboard/js/NewUs.js"></script>*@
@*<script src="~/Dashboard/js/New.js"></script>*@
<script src="~/Dashboard/js/connection.js"></script>
<!--   Core JS Files   -->
<script src="~/Dashboard/js/core/jquery.min.js"></script>
<script src="~/Dashboard/js/core/popper.min.js"></script>
<script src="~/Dashboard/js/core/bootstrap.min.js"></script>
<script src="~/Dashboard/js/plugins/perfect-scrollbar.jquery.min.js"></script>
<!--  Google Maps Plugin    -->
<!-- Place this tag in your head or just before your close body tag. -->
<script src="https://maps.googleapis.com/maps/api/js?key=YOUR_KEY_HERE"></script>
<!-- Chart JS -->
<script src=".~/Dashboard/js/plugins/chartjs.min.js"></script>
<!--  Notifications Plugin    -->
<script src="~/Dashboard/js/plugins/bootstrap-notify.js"></script>
<!-- Control Center for Black Dashboard: parallax effects, scripts for the example pages etc -->
<script src="~/Dashboard/js/black-dashboard.min.js?v=1.0.0"></script><!-- Black Dashboard DEMO methods, don't include it in your project! -->
<script src="~/Dashboard/demo/demo.js"></script>

<script>
    $('.dropdown-menu a').on('click', function () {
        $('.dropdown-toggle').html($(this).html());
    })

    $(document).ready(function () {
        $().ready(function () {
            $sidebar = $('.sidebar');
            $navbar = $('.navbar');
            $main_panel = $('.main-panel');

            $full_page = $('.full-page');

            $sidebar_responsive = $('body > .navbar-collapse');
            sidebar_mini_active = true;
            white_color = false;

            window_width = $(window).width();

            fixed_plugin_open = $('.sidebar .sidebar-wrapper .nav li.active a p').html();



            $('.fixed-plugin a').click(function (event) {
                if ($(this).hasClass('switch-trigger')) {
                    if (event.stopPropagation) {
                        event.stopPropagation();
                    } else if (window.event) {
                        window.event.cancelBubble = true;
                    }
                }
            });

            $('.fixed-plugin .background-color span').click(function () {
                $(this).siblings().removeClass('active');
                $(this).addClass('active');

                var new_color = $(this).data('color');

                if ($sidebar.length != 0) {
                    $sidebar.attr('data', new_color);
                }

                if ($main_panel.length != 0) {
                    $main_panel.attr('data', new_color);
                }

                if ($full_page.length != 0) {
                    $full_page.attr('filter-color', new_color);
                }

                if ($sidebar_responsive.length != 0) {
                    $sidebar_responsive.attr('data', new_color);
                }
            });

            $('.switch-sidebar-mini input').on("switchChange.bootstrapSwitch", function () {
                var $btn = $(this);

                if (sidebar_mini_active == true) {
                    $('body').removeClass('sidebar-mini');
                    sidebar_mini_active = false;
                    blackDashboard.showSidebarMessage('Sidebar mini deactivated...');
                } else {
                    $('body').addClass('sidebar-mini');
                    sidebar_mini_active = true;
                    blackDashboard.showSidebarMessage('Sidebar mini activated...');
                }

                // we simulate the window Resize so the charts will get updated in realtime.
                var simulateWindowResize = setInterval(function () {
                    window.dispatchEvent(new Event('resize'));
                }, 180);

                // we stop the simulation of Window Resize after the animations are completed
                setTimeout(function () {
                    clearInterval(simulateWindowResize);
                }, 1000);
            });

            $('.switch-change-color input').on("switchChange.bootstrapSwitch", function () {
                var $btn = $(this);

                if (white_color == true) {

                    $('body').addClass('change-background');
                    setTimeout(function () {
                        $('body').removeClass('change-background');
                        $('body').removeClass('white-content');
                    }, 900);
                    white_color = false;
                } else {

                    $('body').addClass('change-background');
                    setTimeout(function () {
                        $('body').removeClass('change-background');
                        $('body').addClass('white-content');
                    }, 900);

                    white_color = true;
                }


            });

            $('.light-badge').click(function () {
                $('body').addClass('white-content');
            });

            $('.dark-badge').click(function () {
                $('body').removeClass('white-content');
            });
        });
    });
</script>
<script src="https://cdn.trackjs.com/agent/v3/latest/t.js"></script>
<script>
    window.TrackJS &&
        TrackJS.install({
            token: "ee6fab19c5a04ac1a32a645abde4613a",
            application: "black-dashboard-free"
        });
</script>


<script src="~/SignIn/js/sign.js"></script>
<script>
    firebase.auth().onAuthStateChanged(function (user) {
        if (!user) {
            window.location.href = "@Url.Action("Index","Home")";
        } else {

        }
    });
</script>
